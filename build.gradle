
plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.avast.gradle.docker-compose' version '0.17.6'      //"0.14.2"
}

group = 'net.tryhard'
version = '0.0.1-SNAPSHOT'

ext {
    mapstructVersion = '1.5.5.Final'
}
java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dockerCompose {
    dev {
        useComposeFiles = ["${projectDir}/docker-compose.yml"]
        isRequiredBy(build as Task)
        isRequiredBy(bootRun)

    }
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.liquibase:liquibase-core'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.hibernate.validator:hibernate-validator:6.0.18.Final'

}

tasks.named('test') {
    dependsOn("composeUp")
    useJUnitPlatform()
    finalizedBy("composeDown")
}
dockerCompose.isRequiredBy(project.tasks.named("test"))

